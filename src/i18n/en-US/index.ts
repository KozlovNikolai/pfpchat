// This is just an example,
// so you can safely delete all default props below

export default {
  failed: 'Action failed',
  route: 'route | routes | route',
  routes: 'routes',
  point: 'point | points | point',
  zone: 'zone | zones | zone',
  pointassignment: 'assignment point | assignment points',
  driver: 'driver',
  drivers: 'drivers',
  tracker: 'tracker | trackers | tracker',
  vehicle: 'vehicle | vehicles | vehicle',
  organization: 'organization | organizations | organization',
  order: 'order | orders | order',
  user: 'user | users | user',
  users: 'users',
  person: 'user | users | user',
  history: 'history',
  object: 'object',
  statistics: 'statistics',
  service: 'service',
  hotkeys: 'Hotkeys',
  list_navigation: 'List navigation',
  multiple: 'multiple',
  single: 'single',
  zoom_in: 'Zoom in',
  zoom_out: 'Zoom out',
  order_type: 'Type of order',
  new: 'new',
  postponed: 'postponed',
  waiting: 'waiting',
  on_the_job: 'on the job',

  map: 'map',
  list: 'list',
  panel: 'panel | panels',
  disable: 'disable',
  enable: 'enable',
  sort: 'sort',
  edit: 'edit',
  add: 'add',
  upload: 'upload',
  download: 'download',
  search: 'search',
  loading: 'loading',
  loaded: 'loaded',
  unloading: 'unloading',
  points_uploading: 'Points uploading',
  routes_uploading: 'Routes uploading',
  files_format_error: 'The file format should be as follows: {formats}',
  file: 'file | files',
  size: 'size',
  map_size: 'size on map',
  point_size: 'point size',
  line_size: 'line size',
  remove: 'remove | removed',
  create: 'create | created',
  close: 'close | cancel',
  cancel: 'cancel',
  confirm_action: 'Confirm action',
  confirm_remove: 'Delete {type}: {object}',
  confirm_remove_selected: 'Delete selected items',
  confirm_unassign: 'Delete assignment {type}: {object}',
  confirm_upload_in_past:
    'Past period selected! Are you sure you want to download data from a previous date?',
  invalid_fields: 'invalid fields',
  row_number: 'row number',
  save: 'save',
  apply: 'apply',
  apply_to_other_objects: 'apply to other objects',
  name: 'name',
  client: 'client | client | clients',
  code: 'code',
  latitude: 'latitude',
  lat: 'lat',
  longitude: 'longitude',
  lng: 'lng',
  radius: 'radius',
  weight: 'weight',
  volume: 'volume',
  units: 'units',
  u: 'pcs',
  kg: 'kg',
  t: 't',
  workload: 'workload, weight (t)',
  capacity: 'workload, volume',
  units_total: 'loaded',
  weight_loading: 'loading weight (t)',
  weight_unloading: 'unloading weight (t)',
  volume_loading: 'loading volume',
  volume_unloading: 'unloading volume',
  units_loading: 'load units (pcs)',
  units_unloading: 'unloading units (pcs)',
  working_time: 'working time',
  working_time_from: 'working time from',
  working_time_to: 'working time to',
  arrival_plan_from: 'arrival time from',
  arrival_plan_to: 'arrival time to',
  arrival_plan_time: 'arrival time, plan',
  arrival_fact_time: 'arrival time, fact',
  departure_plan_time: 'departure time, plan',
  departure_fact_time: 'departure time, fact',
  departure_plan: 'departure time',
  unloading_time: 'unloading time',
  unloading_plan_time: 'unloading time, plan',
  unloading_fact_time: 'unloading time, fact',
  min_late_time: 'allowable delay',
  address: 'address',
  priority: 'priority | priority',
  build: 'build | built',
  rebuild: 'rebuild',
  build_routes: 'Build routes | Build route',
  build_method: 'build method',
  build_route_hint:
    "This algorithm builds a route according to the user's point order",
  build_route_sort_hint:
    'This route-building algorithm builds the shortest path to visit points, starting from the first one on the list. Most often the starting point is a warehouse.',
  build_route_trip_hint:
    'This algorithm builds a route for points on one side of the road(s) first, and then after reaching the furthest point, it builds a route on the other side of the road(s) to the starting point.',
  resort: 'rebuild',
  trip: 'return to the beginning',
  warehouse: 'warehouse | warehouses',
  is_warehouse: 'Is it a warehouse?',
  garage: 'garage',
  calendar: 'calendar',
  yesterday: 'yesterday',
  today: 'today',
  tomorrow: 'tomorrow',
  authorization: 'authorization',
  reset: 'reset',
  login: 'login',
  password: 'password',
  forgot_password: 'forgot password',
  enter: 'enter | enter',
  entering: 'entering',
  remember: 'remember',
  bad_credentials: 'Incorrect login',
  total: 'total',
  valid: 'valid | valid | valid',
  invalid: 'invalid | invalid | invalid',
  data: 'data',
  select: 'select | select | selected',
  expand: 'expand',
  collapse: 'collapse',
  columns: 'columns',
  all: 'all',
  clear: 'clear',
  date_start: 'start date',
  date_end: 'end date',
  period: 'period',
  color: 'color',
  analyze: 'point visit analysis',
  late_for: 'late, min',
  overdued: 'overdued | delay',
  unvisited: 'unvisited',
  visited: 'visited | visiting',
  late: 'risk of being late',
  normal: 'expected',
  route_deviation: 'route deviation',
  route_returned: 'return to the route',
  route_completed: 'route completed',
  lost_signal: 'signal losting',
  recovery_signal: 'recovery signal',
  token: 'token',
  server: 'server',
  legacy_format: 'legacy data format',
  add_points_from_list: 'add points from the list',
  shortest_path: 'shortest path',
  user_defined: 'user-defined',
  round_trip: 'round trip',
  cost: 'cost, k',
  penalty: 'fines | fine',
  fixed: 'fixed',
  per_trip: 'trip',
  oot_minute: 'untimely, minutely',
  oot_fixed: 'untimely, fixed.',
  early_minute: 'earlier, minutely',
  early_fixed: 'earlier, fixed',
  drop: "didn't visit",
  late_minute: 'later, minutely',
  late_fixed: 'later, fixed',
  cargo: 'cargo',
  no_data: 'no data',
  delivered: 'delivered',
  undelivered: 'undelivered',
  KPI: 'KPI',
  routing: 'routing',
  demo: 'demo',
  columns_selection: 'Columns selection',
  algorithm: 'algorithm',

  // Notification templates
  route_deviation_notify: '{vehicle}: deviated from the route{route}',
  route_returned_notify: '{vehicle}: returned to the {route} after {duration}',
  route_completed_notify: '{vehicle}: route {route} completed',
  lost_signal_notify: '{vehicle}: lost {sub_type} signal',
  recovery_signal_notify:
    '{vehicle}: спустя {duration} {sub_type} сигнал восстановлен',
  visited_notify: '{vehicle}: point {point} visited',
  unvisited_notify: '{vehicle}: point {point} unvisited',
  late_notify: '{vehicle}: possible delay in {duration} to a point {point}',
  delay_notify: '{vehicle}: delay at point {point} on {duration}',
  departure_notify: '{vehicle}: departure from point {point}',
  overdued_notify: '{vehicle}: arrived late at {duration} to point {point}',

  export: 'export',
  clone_routes: 'assign routes on a selected date',
  km: 'km',
  distance: 'distance, km',
  time: 'time',
  fact: 'fact',
  plan: 'plan',
  deviation: 'deviation',
  arrival: 'arrival',
  departure: 'departure',
  unload: 'unload',
  passed_distance: 'passed distance, km',
  passed_km: 'passed, km',
  duration: 'duration',
  points_length: 'number of points',
  loaded_volume: 'loaded volume',
  max_volume: 'maximum volume',
  max_units: 'number of seats',
  available_volume: 'available volume',
  max_weight: 'max weigh',
  state_number: 'state nember',
  brand: 'brand',
  model: 'model',
  firmware: 'firmware',
  surname: 'surname',
  patronymic: 'patronymic',
  phone: 'phone',
  email: 'email | email',
  max: 'max.',
  load: 'fact.',
  overload: 'overload',
  underload: 'underload',
  allow: 'allow',
  tools: 'supplemental management',
  address_search: 'search by address',
  select_on_map: 'select on map',
  enter_address: 'enter address',
  uid: 'unique code',
  contacts: 'contacts',
  delay: 'delay',
  company: 'company',
  tel: 'tel.',
  representative: 'representative',
  risk: 'risk',
  risk_late: 'Risk of being late',
  enter_value: 'Enter value',
  point_warehouse: 'Point warehouse',
  notifications: 'notifications',
  notifications_settings: 'notifications settings',
  event: 'event',
  event_type: 'event type',
  popup: 'pop-up window',
  support: 'support',
  no_notications: 'No notications',
  date: 'date',
  datetime: 'date and time',
  text: 'text',
  status: 'status',
  no_results: 'No results',
  enter_phone: 'number without a country code',
  settings: 'settings',
  options: 'options',
  cluster_zoom_hint:
    'map scale, after which the individual points of the cluster are shown',
  clusterizing: 'clusterizing',
  clusterizing_hint:
    'combine waypoints into a group when zooming out on the map',
  points_count: 'number of points',
  delivery: 'delivery | deliveries | delivery | deliveries',
  deliver: 'deliver',
  action: 'action',
  get: 'get',
  points_cluster_settings: 'point cluster settings',
  cluster_hint: 'cluster contains points of the same route',
  confirm: 'confirmation | confirm',
  gps_confirm: 'GPS confirmation of point visit',
  attachments: 'attached files',
  task: 'tasks | task',
  number: 'number',
  day: 'day | days | day',
  week: 'week | week | weeks',
  month: 'month | month | months',
  year: 'year | year | years',
  minute: 'minute | minute',
  second: 'second | seconds | second',
  hour: 'hour | hours | hour',
  mins: 'mins.',
  secs: 'secs.',
  hours: 'h.',
  days: 'd.',
  weeks: 'w.',
  months: 'mon.',
  years: 'y.',
  show: 'show',
  hide: 'hide',
  tooltip: 'tooltip',
  show_labels: 'show labels',
  opened: 'opened',
  closed: 'closed',
  payment_form: 'payment form',
  payment_type: 'payment type',
  cash: 'cash',
  wire_transfer: 'wire transfer',
  on_card: 'on card',
  on_hand: 'on hand',
  to_account: 'to account',
  by_phone: 'by phone',
  responsible: 'responsible',
  loaders_need: 'loaders need',
  nomenclature: 'nomenclature',
  quantity: 'quantity',
  price: 'price',
  amount: 'amount',
  other: 'other',
  mon: 'mon | monday',
  tue: 'tue | tuesday',
  wed: 'wed | wednesday',
  thu: 'thu | thursday',
  fri: 'fri | friday',
  sat: 'sat | saturday',
  sun: 'sun | sunday ',
  position: 'position | position',
  route_begin_points: 'starting points of route building',
  route_end_points: 'ending points of route building',
  group: 'group | group | groups',
  control: 'control',
  groups_control: 'groups control',
  assigned: 'assigned',
  not_assigned: 'not assigned',
  route_assignment: 'route assignment',
  filter: 'filter | filters',
  dummy: 'dummy',
  field: 'field | fields | field',
  comment: 'comment',
  attribute: 'attribute',
  string: 'string',
  label: 'label',
  object_types: 'object types',
  field_type: 'field type',
  component: 'component',
  places: 'places',
  main: 'main',
  import: 'import',
  scheme: 'scheme | schemes | scheme',
  constructor: 'constructor',
  app_settings: 'app settings',
  type: 'type',
  default_fields: 'default fields',
  first_name: 'first name',
  id: 'ID',
  times: 'period, times',
  dates: 'period, dates',
  select_all: 'select all',
  show_all: 'show all',
  hide_all: 'hide all',
  classes: 'classes',
  language: 'language',
  plan_fact: 'plan/fact',
  next: 'next',
  back: 'back',
  forward: 'forward',
  file_upload: 'file_upload',
  errors_list: 'errors list',
  online: 'online',
  offline: 'offline',
  online_status: '{diff} {unit} ago',
  now: 'now',
  confirm_code: 'confirmation code',
  detailing: 'detailing',
  no: 'no',
  yes: 'yes',
  was: 'was',
  became: 'became',
  do_changes: 'edited',
  details: 'details',
  unknown: 'unknown',
  exit: 'exit',
  complete: 'complete',
  session: 'session',
  success: 'Success!',
  cell: 'cell',
  page: 'page',
  data_upload_success: 'data uploaded successfully ',
  routes_generate_success: 'routes generate success',
  select_start_point_vehicles:
    'select from the list the transport for which this point will be counted as the starting point',
  select_end_point_vehicles:
    'select from the list the transport for which this point will be counted as a destination',
  approximately: 'approximately',
  saving_data: 'saving data...',
  from_list: 'from the lis',
  select_auth_method: 'select an authorization method:',
  or: 'or',
  in: 'in',
  to: 'to',
  help: 'help',
  instruction: 'instruction',
  mark_as_read: 'mark as read',
  unread: 'unread',
  read: 'read',
  vip_hint: 'only for priority points',
  move: 'move',
  up: 'up',
  down: 'down',
  in_position: 'in position',
  translate: 'translate',
  switch_view: 'switch view',
  profile: 'profile',
  bike: 'bike',
  walk: 'walk',
  auto: 'auto',
  parking: 'parking',
  moving: 'moving',
  activity: 'activity',
  fuel_fill: 'petrol station',
  fuel_drain: 'fuel drain',
  begin: 'begin',
  end: 'end',
  new_notifications: 'You have {count} new notifications',
  no_notifications: 'You do not have new notifications',
  show_traffic_jams: 'show traffic jams',
  hide_traffic_jams: 'hide traffic jams',
  available_fields: 'available fields',
  display_on_map: 'display on the map',
  speed: 'speed, km/h',
  mileage: 'mileage',
  parking_time: 'parking time, sec',
  no_ign_moving: 'movement without ignition',
  add_to_group: 'added to the group',
  remove_from_group: 'removed from the group',
  marker: 'marker',
  tracker_not_available: 'tracker is not available',
  warning_possible_incorrect: 'possibly incorrect data, verification required',
  attention: 'Attention!',
  waybill: 'Waybill',
  group_by: 'grouping',
  at: 'at',
  print: 'print',
  any: 'any',
  download_template: 'Download upload sample file',
  area: 'area',
  automatically: 'automatically',
  manually: 'manually',
  on_roads: 'on roads',
  reconnecting: 'Reconnecting...',
  dashboard: 'Dashboard',
  no_groups: 'No groups',
  delete_selected: 'Delete selected objects?',
  blocked: 'Blocked',
  active: 'Active',
  select_organization: 'Select organization',
  copy: 'Copy',
  info: 'Info',
  shift: 'Shift',
  from: 'from',
  start_from_warehouse: 'from warehouse',
  preview: 'preview',
  reverse_color: 'points coloring',
  enter_by_code: 'login by code',
  continue: 'continue',
  confirm_code_locked: 'Resending the code will be available in {t} seconds',
  view_settings: 'View settings',
  login_by_password: 'Login by password',
  of_travel: 'of travel',

  // Hints
  hint_view_map: 'visible objects on the map',
  hint_view_points: 'display a route points',
  hint_view_route_plan: 'display a planned route',
  hint_view_route_fact: 'display a planned route and events',
  hint_view_route_by_roads: 'plan a route along the roads',
  hint_view_start_from_warehouse:
    'display the route starting from the warehouse',
  hint_loading: 'Loading...',
  hint_not_found: 'Objects not found ',
  hint_no_data: 'There are no objects',
  hint_lost_gps_signal:
    'GPS signal lost, location information may be unreliable!',
  hint_update_points: 'update point coordinates',
  hint_short_password: 'minimum {cnt} characters',
  hint_selection: 'Selection mode: {mode}',
  hint_hotkeys: `<b>Click with the left mouse button</b> - select the active line<br />
  <b>Click with the left mouse button + CTRL key</b> - select the active line (other lines are hidden)<br />
  <i class='text-grey'>(Depending on the row selection mode, other rows may remain visible or be hidden)</i><br />
  <b>Click with the left mouse button + SHIFT key</b> - select a range of lines relative to the active one<br />
  <b>Double-click with the left mouse button</b> - expand/collapse a line<br />
  <b>Right click</b> - context menu<br />
  <b>Key combination CTRL + A</b> - show all objects<br />
  <b>Esc key</b> - hide all objects<br />
  <b>Keys 🠝/🠟</b> - go to previous/next line<br />
  <b>Keys 🠝/🠟 + CTRL</b> - go to the previous/next line (the remaining lines are hidden)<br />`,
  hint_current_group: 'Activate this group only',
  hint_select_group: 'Add group to active',
  hint_plan_costs: 'Price {u}, plan ({c} per 1 {i})',
  hint_fact_costs: 'Price {u}, fact ({c} per 1 {i})',
  hint_reverse_color: 'Color points according to status color',

  // Errors
  error: 'error | errors | error',
  error_authentication: 'Authentication error',
  error_invalid_confirm_code: 'Invalid confirmation code',
  error_bad_credentials: 'Credentials errors',
  error_invalid_data: 'Invalid data',
  error_not_unique: 'already existst',
  error_forbidden: 'insufficient access rights, contact the administrator',
  error_past_date: 'date in the past tense',
  error_not_found: 'object or path not found',
  error_process_data: 'data processing error',
  error_confirm_code_already_sent:
    'the repeated code can be sent only after 3 minutes',

  error_required_attr: 'required attribute',
  error_invalid_attr: 'invalid attribute',
  error_duplicate_attr: 'not unique attribute',
  error_invalid_sheet: 'invalid sheet',
  error_invalid_row: 'invalid row',
  error_error_past_date: 'parse date error',
  error_websocket: 'WebSocket connection error',
  error_geocode: 'Coordinates not found',
  error_save_data: 'Data saving error',
  error_user_blocked: 'Your account is blocked, contact support',
  error_organization_blocked:
    'Your organization is blocked due to non-payment for subscription services',
  error_blocked: 'Access is blocked!',
  error_token_expired: 'Session expired. Log in again',
  error_network: 'Network error',
  error_invalid_document_format: 'Incorrect document format',
  error_parse_request_form: 'Error processing request body',

  // Actions
  edition: 'edition',
  deletion: 'deletion',
  creation: 'creation',
  appointment: 'appointment',

  // ACL
  role: 'role',
  rights: 'rights',
  rights_hint: 'actions available to this user',
  superuser: 'superuser',
  admin: 'admin',
  dispatcher: 'dispatcher',
  logist: 'logist',

  // Time offsets
  time_offset: 'time offset',
  time_offset_hint:
    'For the correct operation of Logistics and the correct display of time in the system, you must set the time zone in accordance with the geographical location.',
  '-12:00': '(UTC -12:00) Eniwetok, Kwajalein',
  '-11:00': '(UTC -11:00) Midway Island, Samoa',
  '-10:00': '(UTC -10:00) Hawaii',
  '-09:30': '(UTC -9:30) Taiohae',
  '-09:00': '(UTC -9:00) Alaska',
  '-08:00': '(UTC -8:00) Pacific Time (US &amp; Canada)',
  '-07:00': '(UTC -7:00) Mountain Time (US &amp; Canada)',
  '-06:00': '(UTC -6:00) Central Time (US &amp; Canada), Mexico City',
  '-05:00': '(UTC -5:00) Eastern Time (US &amp; Canada), Bogota, Lima',
  '-04:30': '(UTC -4:30) Caracas',
  '-04:00': '(UTC -4:00) Atlantic Time (Canada), Caracas, La Paz',
  '-03:30': '(UTC -3:30) Newfoundland',
  '-03:00': '(UTC -3:00) Brazil, Buenos Aires, Georgetown',
  '-02:00': '(UTC -2:00) Mid-Atlantic',
  '-01:00': '(UTC -1:00) Azores, Cape Verde Islands',
  '+00:00': '(UTC) Western Europe Time, London, Lisbon, Casablanca',
  '+01:00': '(UTC +1:00) Brussels, Copenhagen, Madrid, Paris',
  '+02:00': '(UTC +2:00) Kaliningrad, South Africa',
  '+03:00': '(UTC +3:00) Baghdad, Riyadh, Moscow, St. Petersburg',
  '+03:30': '(UTC +3:30) Tehran',
  '+04:00': '(UTC +4:00) Abu Dhabi, Muscat, Baku, Tbilisi',
  '+04:30': '(UTC +4:30) Kabul',
  '+05:00': '(UTC +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent',
  '+05:30': '(UTC +5:30) Bombay, Calcutta, Madras, New Delhi',
  '+05:45': '(UTC +5:45) Kathmandu, Pokhara',
  '+06:00': '(UTC +6:00) Almaty, Dhaka, Colombo',
  '+06:30': '(UTC +6:30) Yangon, Mandalay',
  '+07:00': '(UTC +7:00) Bangkok, Hanoi, Jakarta',
  '+08:00': '(UTC +8:00) Beijing, Perth, Singapore, Hong Kong',
  '+08:45': '(UTC +8:45) Eucla',
  '+09:00': '(UTC +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk',
  '+09:30': '(UTC +9:30) Adelaide, Darwin',
  '+10:00': '(UTC +10:00) Eastern Australia, Guam, Vladivostok',
  '+10:30': '(UTC +10:30) Lord Howe Island',
  '+11:00': '(UTC +11:00) Magadan, Solomon Islands, New Caledonia',
  '+11:30': '(UTC +11:30) Norfolk Island',
  '+12:00': '(UTC +12:00) Auckland, Wellington, Fiji, Kamchatka',
  '+12:45': '(UTC +12:45) Chatham Islands',
  '+13:00': '(UTC +13:00) Apia, Nukualofa',
  '+14:00': '(UTC +14:00) Line Islands, Tokelau',

  // Dashboard
  points_unvisited: 'unvisited',
  points_visited: 'visited',
  points_overdued: 'late',
  total_duration: 'planned time, h',
  passed_duration: 'actual time, h',
  total_distance: 'planned distance, km',
  exponent: 'exponent',
  chart_duration: 'execution time chart',
  chart_distance: 'graph of distance traveled',
  chart_kpi: 'KPI chart',
  chart_points: 'graph of visiting points',
  move_pin: 'move pin',
  all_vehicles: 'all cars',
  bar_chart: 'bar chart',
  line_chart: 'line chart',
  bring_closer: 'bring closer',
  move_away: 'move away',
  view_info: 'info display settings',
  score: 'rating',
  filter_by_widget: 'filter by widgets',
  liters: 'l',
  rubles: 'rub',
  completion_time: 'completion time',
  info_by_points: 'information on visited points',
  info_by_distance: 'information on distance traveled',
  info_by_duration: 'information on route travel time',
  chart_cost: 'cost chart',
  distance_cost_plan: 'mileage (plan)',
  distance_cost_fact: 'mileage (fact)',
  fixed_cost: 'fix',
  duration_cost_fact: 'time (fact)',
  duration_cost_plan: 'time (plan)',
  visits_cost: 'visits',
  trip_cost: 'trips',
  cost_simple: 'cost',
  cost_unit: 'th. rub.',
  chart_penalty: 'penalty chart',
  late_fixed_penalty: 'later, fixed',
  late_minute_penalty: 'later, min',
  drop_penalty: 'not visited',
  early_fixed_penalty: 'early, min',
  early_minute_penalty: 'early, fixed',
  oot_minute_penalty: 'untimely, min',
  oot_fixed_penalty: 'untimely, fixed',
  click_by_car: 'click on the car to get more information',
  reset_dash_config: 'reset current configuration',
  currency: 'currency',
  per_hour: 'per hour',
  per_km: 'per km',
  time_window: 'time window',
  undistributed: 'undistributed',

  // order statuses
  in_tech_support: 'To tech support',
  installation: 'Installation',
  dismantling_or_installation: 'Dismantling/Installation',
  check: 'Checking',
  new_user: 'New user',
  fuel_setting: 'Fuel settings',
  change_data: 'Change data',
  un_or_blocking: '(Un)Blocking',
  shipment: 'Shipment',
  to_sales: 'To sales',
  to_accounting: 'To accounting',
  device_replacement: 'Device replacement',
  check_FLS: 'Check fuel level sensor',
  diagnostics: 'Diagnostics',
  for_repairs: 'For repairs',
  install_tachograph: 'Installing a tachograph',
  install_FLS: 'Installing a fuel level sensor',
  retra: 'Retranslation',
  monitoring: 'Monitoring',
  generate_report: 'Generate report',
  replacing_FLS: 'Replacing fuel level sensor',
  additional_sensor_except_FLS: 'Additional sensor (except fuel level sensor)',
  tachograph_cards: 'Tachograph cards',
  tachograph_check: 'Tachograph check',
  calibration_table: 'Calibration table',
  general_questions: 'General questions',
  installation_shipment_region: 'Installation-Shipment (region)',
}
